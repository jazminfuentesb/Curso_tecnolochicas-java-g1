/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    // implementation(libs.guava)

    // ⭐⭐ AGREGA ESTA LÍNEA PARA PROJECT REACTOR ⭐⭐
    implementation("io.projectreactor:reactor-core:3.6.0") // Using Kotlin DSL syntax
}

// ⭐⭐⭐ THIS IS THE CRUCIAL BLOCK: MAKE SURE IT'S HERE ⭐⭐⭐
// It tells Gradle to use UTF-8 when compiling Java files.
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    // ⭐⭐⭐ UPDATE THIS TO YOUR MAIN CLASS ⭐⭐⭐
    mainClass = 'org.example.MeridianPrimeControl' // Adjust 'org.example' to your package name
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}